{"version":3,"file":"single-spa.js","sources":["../../src/applications/app.helpers.js","../../src/start.js","../../src/navigations/navigator-event.js","../../src/lifecycles/load.js","../../src/lifecycles/unmount.js","../../src/lifecycles/bootstrap.js","../../src/lifecycles/mount.js","../../src/navigations/reroutes.js","../../src/applications/app.js"],"sourcesContent":["/* eslint-disable prettier/prettier */\r\n// 描述应用的整个状态\r\n\r\nexport const NOT_LOADED = \"NOT_LOADED\"; // 应用初始状态\r\nexport const LOADING_SOURCE_CODE = \"LOADING_SOURCE_CODE\"; // 加载资源\r\nexport const NOT_BOOTSTRAPPED = \"NOT_BOOTSTRAPPED\"; // 还没有调用bootstrap方法\r\nexport const BOOTSTRAPPING = \"BOOTSTRAPPING\"; // 启用ing\r\nexport const NOT_MOUNTED = \"NOT_MOUNTED\"; // 没有调用mount方法\r\nexport const MOUNTING = \"MOUNTING\"; // 正在挂载中\r\nexport const MOUNTED = \"MOUNTED\"; // 挂载完毕\r\nexport const UPDATING = \"UPDATING\"; // 更新中\r\nexport const UNMOUNTING = \"UNMOUNTING\"; // 解除挂载中\r\nexport const UNLOADING = \"UNLOADING\"; // 完全卸载中\r\nexport const LOAD_ERR = \"LOAD_ERR\"; // 加载遇到错误\r\nexport const SKIP_BECAUSE_BROKEN = \"SKIP_BECAUSE_BROKEN\"; // 脚本错误问题\r\n\r\n// 当前应用是否被激活\r\nexport function isActive(app) {\r\n  return app.status === MOUNTED;\r\n}\r\n\r\n// 当前这个应用是否要被激活\r\n// 如果返回true，那么应用应该就开始初始化等一系列操作\r\nexport function shouldBeActive(app) {\r\n  return app.activeWhen(window.location);\r\n}\r\n","/* eslint-disable prettier/prettier */\r\nimport { reroute } from \"./navigations/reroutes\";\r\nexport let started = false;\r\nexport function start() {\r\n  // 需要挂载应用\r\n  started = true;\r\n  // 除了去加载应用还需要去挂载应用\r\n  reroute();\r\n}\r\n","/* eslint-disable prettier/prettier */\r\nimport { reroute } from \"./reroutes\";\r\n\r\n// 拦截路由变化事件\r\nexport const routingEventListeningTo = [\"hashchange\", \"popstate\"];\r\n\r\nfunction urlReroute() {\r\n  reroute([], arguments);\r\n}\r\n\r\n// 需要拦截的路由方法(等应用加载完毕后才执行)， 其他事件(比如click事件)就不需要管理\r\nconst captureEventListeners = {\r\n  // 后续挂载的事件先暂存起来, 当应用切换完成后调用\r\n  hashchange: [],\r\n  popstate: [],\r\n};\r\n\r\n// 我们处理应用加载的逻辑是在最前面\r\n// 拦截路由变化，重新执行reroute, 刷新应用，已经加载后的不会再次加载，而是直接挂载\r\n// 监听原生的浏览器hash变化事件\r\nwindow.addEventListener(\"hashchange\", urlReroute);\r\n// 监听原生的浏览器前进后退事件\r\nwindow.addEventListener(\"popstate\", urlReroute);\r\n\r\nconst originalAddEventListener = window.addEventListener;\r\nconst originalRemoveEventListener = window.removeEventListener;\r\n\r\n// 重写路由方法\r\n// 用户注册的方法重写为下面的方法\r\n// 用户可能还会绑定自己的路由事件 vue\r\n// 当我们应用切换后，还需要处理原来的方法(vue原来的方法)，需要在应用切换后再执行\r\nwindow.addEventListener = function (eventName, fn) {\r\n  // 缓存中没有这个方法，就存起来，否则不存\r\n  if (\r\n    routingEventListeningTo.indexOf(eventName) >= 0 &&\r\n    !captureEventListeners[eventName].some((listener) => listener === fn)\r\n  ) {\r\n    captureEventListeners[eventName].push(fn);\r\n    return;\r\n  }\r\n  // 等应用加载完成后，执行用户绑定的方法\r\n  return originalAddEventListener.apply(this, arguments);\r\n};\r\n\r\nwindow.removeEventListener = function (eventName, fn) {\r\n  if (routingEventListeningTo.indexOf(eventName) >= 0) {\r\n    // 移除方法\r\n    captureEventListeners[eventName] = captureEventListeners[eventName].filter(\r\n      (listener) => listener !== fn\r\n    );\r\n    return;\r\n  }\r\n  // 等应用加载完成后，执行用户绑定的方法\r\n  return originalRemoveEventListener.apply(this, arguments);\r\n};\r\n\r\n// 如果是hash路由，hash变化是可以切换\r\n// 如果是浏览器路由，因为浏览器路由是基于h5 API的，切换时不会触发popstate事件\r\n// 补丁方法\r\nfunction patchedUpdateState(updateState, methodName) {\r\n  return function () {\r\n    const urlBefore = window.location.href;\r\n    updateState.apply(this, arguments);\r\n    const urlAfter = window.location.href;\r\n    // 如果前后路径不一致，说明需要重新加载应用\r\n    if (urlBefore !== urlAfter) {\r\n      // 重新加载应用, 传入事件源\r\n      // eslint-disable-next-line no-undef\r\n      urlReroute(new PopStateEvent(\"popstate\"));\r\n    }\r\n  };\r\n}\r\n\r\n// 重写方法: 用户调用pushState，重新生成一个补丁方法\r\nwindow.history.pushState = patchedUpdateState(\r\n  window.history.pushState,\r\n  \"pushState\"\r\n);\r\nwindow.history.replaceState = patchedUpdateState(\r\n  window.history.replaceState,\r\n  \"replaceState\"\r\n);\r\n\r\n// qiankun源码\r\n// 如果浏览器支持proxy, 就用proxy创建沙箱，否则使用快照沙箱\r\n// 从window取属性，不更新原来的window\r\n// 每个实例都是一个proxy","/* eslint-disable prettier/prettier */\r\nimport {\r\n  LOADING_SOURCE_CODE,\r\n  NOT_BOOTSTRAPPED,\r\n} from \"../applications/app.helpers\";\r\n\r\n/**\r\n * 拍平函数数组\r\n * @param {*} fns 函数数组\r\n */\r\nfunction flattenFnArray(fns = []) {\r\n  fns = Array.isArray(fns) ? fns : [fns];\r\n  return (props) =>\r\n    fns.reduce((p, fn) => p.then(() => fn(props)), Promise.resolve());\r\n}\r\n\r\nexport async function toLoadPromise(app) {\r\n  // 避免app重复加载，缓存里面有就直接取\r\n  if (app.loadPromise) return app.loadPromise; // 缓存机制\r\n  // 没有的话就需要缓存一次再return\r\n  return (app.loadPromise = Promise.resolve().then(async () => {\r\n    // 正在加载中\r\n    app.status = LOADING_SOURCE_CODE;\r\n    // 上面的缓存机制保证了 loadApp 只调用一次loadApp(用户传入的方法，该方法返回一个Proimse)\r\n    const { bootstrap, mount, unmount } = await app.loadApp(app.customProps);\r\n    // 已加载，未启动\r\n    // 三个属性值可能是个数组，将用户传入的多个方法组合成一个，并且可以依次调用\r\n    // 将多个promise组合在一起 compose\r\n    app.status = NOT_BOOTSTRAPPED;\r\n    app.bootstrap = flattenFnArray(bootstrap);\r\n    app.mount = flattenFnArray(mount);\r\n    app.unmount = flattenFnArray(unmount);\r\n    delete app.loadPromise;\r\n    return app;\r\n  }));\r\n}\r\n","/* eslint-disable prettier/prettier */\r\nimport { MOUNTED, UNMOUNTING, NOT_MOUNTED } from \"../applications/app.helpers\";\r\n\r\nexport async function toUnmountPromise(app) {\r\n  // 当前应用没有被挂载直接什么都不做了\r\n  if (app.status !== MOUNTED) return app;\r\n  // 卸载中\r\n  app.status = UNMOUNTING;\r\n  await app.unmount(app.customProps);\r\n  // 已卸载(未挂载)\r\n  app.status = NOT_MOUNTED;\r\n  return app;\r\n}\r\n","/* eslint-disable prettier/prettier */\r\nimport {\r\n  NOT_BOOTSTRAPPED,\r\n  BOOTSTRAPPING,\r\n  NOT_LOADED,\r\n} from \"../applications/app.helpers\";\r\n\r\nexport async function toBootstrapPromise(app) {\r\n  // 未启动的状态\r\n  if (app.status !== NOT_BOOTSTRAPPED) return app;\r\n  // 启动后\r\n  app.status = BOOTSTRAPPING;\r\n  await app.bootstrap(app.customProps);\r\n  // 未加载\r\n  app.status = NOT_LOADED;\r\n  return app;\r\n}\r\n","/* eslint-disable prettier/prettier */\r\nimport { NOT_MOUNTED, MOUNTING, MOUNTED } from \"../applications/app.helpers\";\r\n\r\nexport async function toMountPromise(app) {\r\n  // 需要未挂载的应用才行\r\n  if (app.status !== NOT_MOUNTED) return app;\r\n  // 挂载中\r\n  app.status = MOUNTING;\r\n  await app.mount(app.customProps);\r\n  // 已挂载\r\n  app.status = MOUNTED;\r\n  return app;\r\n}\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-unused-vars */\r\nimport { started } from \"../start\";\r\nimport { getAppChanges } from \"../applications/app\";\r\nimport \"./navigator-event\";\r\nimport { toLoadPromise } from \"../lifecycles/load\";\r\nimport { toUnmountPromise } from \"../lifecycles/unmount\";\r\nimport { toBootstrapPromise } from \"../lifecycles/bootstrap\";\r\nimport { toMountPromise } from \"../lifecycles/mount\";\r\n/**\r\n * 核心应用处理方法\r\n// 这个流程是用于初始化操作的，我们还需要 当路径切换时重新加载应用\r\n */\r\nexport function reroute() {\r\n  // NOT_MOUNTED: 表示需要被加载\r\n  // NOT_LOADING：表示需要被加载\r\n  // 获取需要被加载的应用\r\n  // 获取需要被挂载的应用\r\n  // 获取需要被卸载的应用\r\n  const { appsToLoaded, appsToMount, appsToUnmount } = getAppChanges();\r\n  // start方法调用时是同步的，但是加载流程是异步的\r\n  if (started) {\r\n    // app装载\r\n    return performAppChanges();\r\n  } else {\r\n    // 注册应用时 需要预先下载\r\n    return loadApps();\r\n  }\r\n\r\n  // 预加载子应用资源\r\n  async function loadApps() {\r\n    // 就是获取到bootstrap,mount和unmount方法放到app上, 因此用户需要导出这三个方法，否则不能预加载\r\n    // 并发加载应用\r\n    const apps = await Promise.all(appsToLoaded.map(toLoadPromise));\r\n  }\r\n  // 根据路径来转载应用\r\n  async function performAppChanges() {\r\n    // 需要去卸载的app\r\n    const unmountPromises = appsToUnmount.map(toUnmountPromise);\r\n\r\n    // 这个应用可能需要加载 但是路径不匹配  加载app1 的时候，这个时候切换到了app2\r\n    appsToLoaded.map(async (app) => {\r\n      // 加载app\r\n      app = await toLoadPromise(app);\r\n      // 启动app\r\n      app = await toBootstrapPromise(app);\r\n      return toMountPromise(app);\r\n    });\r\n\r\n    appsToMount.map(async (app) => {\r\n      app = await toBootstrapPromise(app);\r\n      return toMountPromise(app);\r\n    });\r\n  }\r\n}\r\n","/* eslint-disable prettier/prettier */\r\nimport {\r\n  NOT_LOADED,\r\n  LOADING_SOURCE_CODE,\r\n  NOT_BOOTSTRAPPED,\r\n  BOOTSTRAPPING,\r\n  MOUNTED,\r\n  NOT_MOUNTED,\r\n  shouldBeActive,\r\n} from \"./app.helpers.js\";\r\nimport { reroute } from \"../navigations/reroutes.js\";\r\n\r\n/**\r\n * 注册应用\r\n * @param {*} appName 应用名称\r\n * @param {*} loadApp 加载的应用\r\n * @param {*} activeWhen 当激活时候会调用 loadApp\r\n * @param {*} customProps 自定义属性\r\n */\r\nconst apps = []; // 用来所有的应用\r\n// singleSpa也有类似vue的生命周期，因此需要维护应用所有的状态，相当于状态机\r\nexport function registerApplication(appName, loadApp, activeWhen, customProps) {\r\n  apps.push({\r\n    name: appName,\r\n    loadApp,\r\n    activeWhen,\r\n    customProps,\r\n    status: NOT_LOADED,\r\n  });\r\n  // 需要加载应用\r\n  reroute();\r\n}\r\nexport function getAppChanges() {\r\n  // 需要加载的app\r\n  const appsToLoaded = [];\r\n  // 需要挂载的app\r\n  const appsToMount = [];\r\n  // 需要卸载的app\r\n  const appsToUnmount = [];\r\n  apps.forEach((app) => {\r\n    // 需不需要被加载\r\n    const appShouldBeActive = shouldBeActive(app);\r\n    switch (app.status) {\r\n      // 这些状态的，就需要被加载\r\n      case NOT_LOADED:\r\n      case LOADING_SOURCE_CODE:\r\n        if (appShouldBeActive) {\r\n          appsToLoaded.push(app);\r\n        }\r\n        break;\r\n      // 这些状态的就需要被挂载\r\n      case NOT_BOOTSTRAPPED:\r\n      case BOOTSTRAPPING:\r\n      case NOT_MOUNTED:\r\n        if (appShouldBeActive) {\r\n          appsToMount.push(app);\r\n        }\r\n        break;\r\n      // 需要被卸载\r\n      case MOUNTED:\r\n        // 当前这个应用不需要被激活才能卸载\r\n        if(!appShouldBeActive) {\r\n          appsToUnmount.push(app);\r\n        }\r\n        break;\r\n    }\r\n  });\r\n  return {\r\n    appsToLoaded,\r\n    appsToMount,\r\n    appsToUnmount,\r\n  };\r\n}\r\n\r\n// 卸载 -> 加载 -> 挂载\r\n"],"names":[],"mappings":"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"}